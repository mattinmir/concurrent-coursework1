/* Concurrent Programming Coursework 1
 * Mattin Mir-Tahmasebi 
 * CID: 00824754
 * Imperial College London
 */

const N = 3
range T = 0..N

LOCK = 					(lock -> unlock -> LOCK).

EAST = 					(open -> OPEN_EAST),
OPEN_EAST = 			(lock -> increment -> unlock -> enter -> OPEN_EAST // Hide lock, increment and unlock
						|close -> EAST).

WEST =	 				(lock -> decrement -> unlock -> exit -> WEST). // Hide lock, decrement and unlock

CONTROL =	  			(open -> OPEN[0]),
OPEN[visitors:T] = 		(when (visitors < N) increment -> OPEN[visitors+1]
						|when (visitors > 0) decrement -> OPEN[visitors-1]
						|close -> CLOSED[visitors]),
CLOSED[visitors:T] =	(when (visitors > 0) decrement -> CLOSED[visitors-1]
						|when (visitors == 0) empty -> CONTROL).

||LOCKED_CONTROL = 		(LOCK || CONTROL).

DIRECTOR = 				(open -> DIRECTOR2),
DIRECTOR2 = 			(close -> empty -> open -> DIRECTOR2).

||MUSEUM = 				(LOCKED_CONTROL || DIRECTOR || EAST || WEST)@{enter, exit, open, close, empty} .